name: Create Release
run-name: Creating archive for ${{ github.ref_name }} release ðŸš€

# Run when new version tags (v*.*.*) are created
on:
  push:
    tags: ["v*.*.*"]

# Give permission to create release
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkouts repository
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      # Getting repository name from path (user_name/repo_name -> repo_name)
      - name: Get Repository Name
        run: echo REPOSITORY_NAME=`echo ${{ github.repository }} | cut -d'/' -f2` >> "$GITHUB_ENV"

      # Getting version number from tag (v*.*.* -> *.*.*)
      - name: Get Version Number
        run: echo VERSION_NUMBER=`echo ${{ github.ref_name }} | cut -d'v' -f2` >> "$GITHUB_ENV"

      # Getting name to use on created archive (repo_name_v*.*.*)
      - name: Get Archive Name
        run: echo ARCHIVE_NAME="$REPOSITORY_NAME"_"${{ github.ref_name }}" >> "$GITHUB_ENV"

      # Updating version number on plugin.cfg
      - name: Update Version Number
        run: sed -i "/version=/s/\"[^\"]*\"/\"$VERSION_NUMBER\"/" addons/locker/plugin.cfg

      # Copying README.md and LICENSE to addon
      - name: Copy README.md and LICENSE
        run: |
          # Copy README.md to addon
          cp README.md addons/locker/

          # Copy LICENSE to addon
          cp LICENSE addons/locker/
      
      # Creating archive with contents from addon
      - name: Make Addon Archive
        run: |
          # Create subdirectory for the addon
          mkdir -p "$ARCHIVE_NAME"/addons

          # Copy the addon files
          rsync --archive addons/locker "$ARCHIVE_NAME"/addons/

          # Make archive from subdirectory
          zip --recurse-paths "$ARCHIVE_NAME".zip "$ARCHIVE_NAME"

      # Publishing or updating the release with the created archive
      - name: Update Release with Archive
        uses: softprops/action-gh-release@v2
        with:
          files: "*.zip"
